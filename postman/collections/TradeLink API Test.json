{
	"info": {
		"_postman_id": "ef4fe73d-ffb6-4323-98b3-1aca36bb94c7",
		"name": "TradeLink API Test",
		"description": "Run the HelperRun folder first to set up all the enviorment variable that will be use by the SeqTest folder. If you don't most of those test will fail.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "44259711-ef4fe73d-ffb6-4323-98b3-1aca36bb94c7"
	},
	"item": [
		{
			"name": "SeqTest",
			"item": [
				{
					"name": "Adding to Wishlist-UI009",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "db4439cb-6ecb-4017-9155-7dc1d0986d1f",
								"exec": [
									"let item_info = pm.environment.get(\"item_info\");",
									"let parse = JSON.parse(item_info);",
									"",
									"let item_id = parse.item_id;",
									"",
									"pm.variables.set(\"item_id\", item_id);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "dae4b307-8f43-485e-a7be-bdefe5e67d04",
								"exec": [
									"pm.test(\"UI-009 adding an item to my wishlist\", function(){",
									"    pm.response.to.have.status(200)",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "7cdd350d-d641-487b-bfcc-06b5f82bfa36",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "jwt",
							"jwt": [
								{
									"key": "payload",
									"value": "{{token_user}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "algorithm",
									"value": "HS256",
									"type": "string"
								},
								{
									"key": "isSecretBase64Encoded",
									"value": false,
									"type": "boolean"
								},
								{
									"key": "headerPrefix",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "queryParamKey",
									"value": "token",
									"type": "string"
								},
								{
									"key": "header",
									"value": "{}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"uid\": {{user_id}},\n    \"item_id\": {{item_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mainurl}}/wishlist/add",
							"host": [
								"{{mainurl}}"
							],
							"path": [
								"wishlist",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "Removing from Wishlist",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a9918ada-5de1-4923-ae02-cff995abb409",
								"exec": [
									"let item_info = pm.environment.get(\"item_info\");",
									"let parse = JSON.parse(item_info);",
									"",
									"let item_id = parse.item_id;",
									"",
									"",
									"pm.variables.set(\"item_id\", item_id);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "261e6b2d-0374-4ad2-876d-fe82cc6c4ea3",
								"exec": [
									"pm.test(\"Status Code is 200\", function(){",
									"    pm.response.to.have.status(200)",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "191f572f-686d-42fd-9fc9-53af9d3d5705",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "jwt",
							"jwt": [
								{
									"key": "payload",
									"value": "{{token_user}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "algorithm",
									"value": "HS256",
									"type": "string"
								},
								{
									"key": "isSecretBase64Encoded",
									"value": false,
									"type": "boolean"
								},
								{
									"key": "headerPrefix",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "queryParamKey",
									"value": "token",
									"type": "string"
								},
								{
									"key": "header",
									"value": "{}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"uid\": {{user_id}},\n    \"item_id\": {{item_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mainurl}}/wishlist/remove",
							"host": [
								"{{mainurl}}"
							],
							"path": [
								"wishlist",
								"remove"
							]
						}
					},
					"response": []
				},
				{
					"name": "ItemReport-CM004",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a3d7a347-e8e7-40b1-9764-f0ade3702b90",
								"exec": [
									"let item_info = pm.environment.get(\"item_info\");",
									"let parse = JSON.parse(item_info);",
									"let item_id = parse.item_id;",
									"",
									"",
									"pm.variables.set(\"item_id\", item_id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5242713e-cb2d-4bc0-b5cd-11432db573e2",
								"exec": [
									"pm.test(\"CM-004 reporting an item as user\", function(){",
									"    pm.response.to.have.status(200)",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "d541abd0-193f-47a3-92cf-1a72b869f5eb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_id\": {{item_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mainurl}}/report_item",
							"host": [
								"{{mainurl}}"
							],
							"path": [
								"report_item"
							]
						}
					},
					"response": []
				},
				{
					"name": "unlist Item [exist]-CM008",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cabb68f1-4435-46ee-b739-492d7aeeadc0",
								"exec": [
									"let item_info = pm.environment.get(\"item_info\");",
									"let parse = JSON.parse(item_info);",
									"let item_id = parse.item_id;",
									"",
									"pm.variables.set(\"item_id\", item_id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ea8ec5d4-3eb4-44f6-82d7-1da7082d47bb",
								"exec": [
									"",
									"pm.test(\"CM-008 unlisting an item that's currently under sell\", function(){",
									"    pm.response.to.have.status(200)",
									"    console.log(\"Pass login in test\")",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "5a27f0be-aff7-4ddd-8f09-a52be30c8346",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_id\": {{item_id}},\n    \"newListedStatus\": 0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mainurl}}/listing_item",
							"host": [
								"{{mainurl}}"
							],
							"path": [
								"listing_item"
							]
						}
					},
					"response": []
				},
				{
					"name": "unlist Item [does not exist]-CM008",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "adc6d5af-bf98-40f9-a98a-d9573c31045a",
								"exec": [
									"let item_info = pm.environment.get(\"item_info\");",
									"let parse = JSON.parse(item_info);",
									"let item_id = parse.item_id;",
									"",
									"pm.variables.set(\"item_id\", item_id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ffcc5580-dfb7-4f2e-9625-2c68993e5099",
								"exec": [
									"pm.test(\"CM-008 unlisting an item but it was removed so the item doesn't exist\", function(){",
									"    pm.response.to.have.status(404)",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "e3ed93aa-a9c2-4688-9ea2-0741aeb842de",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_id\": -10,\n    \"newListedStatus\": 0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mainurl}}/listing_item",
							"host": [
								"{{mainurl}}"
							],
							"path": [
								"listing_item"
							]
						}
					},
					"response": []
				},
				{
					"name": "relist Item",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "3124a319-adce-472b-ad4d-179d0b4f6f8a",
								"exec": [
									"let item_info = pm.environment.get(\"item_info\");",
									"let parse = JSON.parse(item_info);",
									"let item_id = parse.item_id;",
									"",
									"pm.variables.set(\"item_id\", item_id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b3dc7bb2-4352-4035-97c8-ee36b2cd4854",
								"exec": [
									"pm.test(\"Status Code is 200\", function(){",
									"    pm.response.to.have.status(200)",
									"    console.log(\"Pass login in test\")",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "5a6d4333-06e4-424a-9529-2594d5961cde",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_id\": {{item_id}},\n    \"newListedStatus\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mainurl}}/listing_item",
							"host": [
								"{{mainurl}}"
							],
							"path": [
								"listing_item"
							]
						}
					},
					"response": []
				},
				{
					"name": "UI-001 search and browse available items using keywords and categories",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "27b78db8-d04f-4517-bd35-25d84186e585",
								"exec": [
									"let responseData = pm.response.json();",
									"",
									"if (responseData.success && Array.isArray(responseData.data) && responseData.data.length > 0) {",
									"    let firstItem = responseData.data[0];",
									"",
									"    pm.environment.set(\"item_info\", JSON.stringify(firstItem));",
									"",
									"    pm.environment.set(\"item_id\", firstItem.item_id);",
									"    pm.environment.set(\"itemname\", firstItem.itemname);",
									"    pm.environment.set(\"category\", firstItem.category);",
									"    pm.environment.set(\"price\", firstItem.price);",
									"",
									"} ",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "83183cac-fa75-4dcf-91fd-1ceab80e0f9b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"category\": 1,\n    \"price\": {\n        \"flag\": 1,\n        \"low\": 5,\n        \"high\": 10\n    },\n    \"itemname\": \"f\",\n    \"county_code\": null,\n    \"township\": \"null\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mainurl}}/filter",
							"host": [
								"{{mainurl}}"
							],
							"path": [
								"filter"
							]
						}
					},
					"response": []
				},
				{
					"name": "removeItem [user]-UI003",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3de01c01-09fd-479b-9b48-46eff025be28",
								"exec": [
									"if (pm.environment.get(\"buffer_id2\") != -100){",
									"    pm.test(\"UI-003 removing an item from User\", function(){",
									"        pm.response.to.have.status(200)",
									"    })",
									"}",
									"else{",
									"        pm.test(\"UI-003 removing an item from User\", function(){",
									"        pm.response.to.have.status(404)",
									"    })",
									"}",
									"pm.environment.set(\"buffer_id2\", -100)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4a9f41b3-8242-46ff-9ec7-3a5ea09c813b",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "047d3eb0-95f7-4313-952e-9c8e7eb22788",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_id\": {{buffer_id2}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mainurl}}/remove_item",
							"host": [
								"{{mainurl}}"
							],
							"path": [
								"remove_item"
							]
						}
					},
					"response": []
				},
				{
					"name": "removeItem [admin][exist]-CM006",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2a153d04-aaa5-4cd6-a2a9-3ba7ebe16790",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "60455de5-74c5-4ed2-b7b8-9147e5746e34",
								"exec": [
									"if(pm.environment.get(\"buffer_id\") != -100){",
									"    pm.test(\"CM-006 removing an item as Admin\", function(){",
									"        pm.response.to.have.status(200)",
									"    })",
									"}",
									"else{",
									"    pm.test(\"CM-006 removing an item as Admin\", function(){",
									"        pm.response.to.have.status(404)",
									"    }) ",
									"}",
									"pm.environment.set(\"buffer_id\", -100)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "f3e80142-3c8d-43ed-a3dc-9477d02d39b9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_id\": {{buffer_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mainurl}}/remove_item",
							"host": [
								"{{mainurl}}"
							],
							"path": [
								"remove_item"
							]
						}
					},
					"response": []
				},
				{
					"name": "removeItem [admin][does not exist]-CM006",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ce090b8a-e814-4e42-b5c9-f65f00cb2ba4",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "228fa1e2-1513-4bd7-8e20-6b67dad68b56",
								"exec": [
									"pm.test(\"CM-006 removing an item from Admin but items is already removed\", function(){",
									"    pm.response.to.have.status(404)",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "5f947cf0-5cb5-4794-a18b-2e2d70108479",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_id\": -100\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mainurl}}/remove_item",
							"host": [
								"{{mainurl}}"
							],
							"path": [
								"remove_item"
							]
						}
					},
					"response": []
				},
				{
					"name": "Testing Messaging-UI002+UI103",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7ca543c2-ca3c-4687-90ad-55a0db9e49cf",
								"exec": [
									"let message = \"this is a test message\";",
									"",
									"pm.variables.set(\"message\", message);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "6ce9f5ec-a34d-4be2-b3b6-1f2dad2ba557",
								"exec": [
									"pm.test(\"UI-002 Testing sending a message\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"UI-103 Testing message sending reponse time below 2 sec\", function(){",
									"    pm.expect(pm.response.responseTime).below(2000);",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "a983753f-778c-4da8-870d-5056d3ee71d6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "jwt",
							"jwt": [
								{
									"key": "payload",
									"value": "{{token_user}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "algorithm",
									"value": "HS256",
									"type": "string"
								},
								{
									"key": "isSecretBase64Encoded",
									"value": false,
									"type": "boolean"
								},
								{
									"key": "headerPrefix",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "queryParamKey",
									"value": "token",
									"type": "string"
								},
								{
									"key": "header",
									"value": "{}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"receiver_id\": \"{{seller_id}}\",\n    \"sender_id\": \"{{buyer_id}}\",\n    \"content\": \"{{message}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mainurl}}/sendMessage",
							"host": [
								"{{mainurl}}"
							],
							"path": [
								"sendMessage"
							]
						}
					},
					"response": []
				},
				{
					"name": "Report-CM007",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a622e45a-4cdc-4be1-b189-97a49bbdf94d",
								"exec": [
									"//CM-007",
									"pm.test(\"CM-007 generating a report as Admin\", function(){",
									"    pm.response.to.have.status(200)",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "47296148-b61a-418f-b1ad-a04489dc420b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "jwt",
							"jwt": [
								{
									"key": "payload",
									"value": "{{token_admin}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "algorithm",
									"value": "HS256",
									"type": "string"
								},
								{
									"key": "isSecretBase64Encoded",
									"value": false,
									"type": "boolean"
								},
								{
									"key": "headerPrefix",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "queryParamKey",
									"value": "token",
									"type": "string"
								},
								{
									"key": "header",
									"value": "{}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mainurl}}/item-report",
							"host": [
								"{{mainurl}}"
							],
							"path": [
								"item-report"
							]
						}
					},
					"response": []
				}
			],
			"id": "5024445d-4ec8-488d-8f98-5aabc23f97a8"
		},
		{
			"name": "HelperRun",
			"item": [
				{
					"name": "Login Admin",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "3866bda8-7f5b-44f6-92ca-9c9c97135d1f",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "6ab624f5-065e-49d7-b3dc-ef8fc826cdfb",
								"exec": [
									"pm.test(\"Status Code is 200\", function(){",
									"    pm.response.to.have.status(200)",
									"    console.log(\"Pass login in test\")",
									"})",
									"let token = pm.cookies.get(\"tradelink\");",
									"pm.environment.set(\"token_admin\", token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "9688bf85-0c7c-45fb-a621-72699cfc26a4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "jwt",
							"jwt": [
								{
									"key": "algorithm",
									"value": "HS256",
									"type": "string"
								},
								{
									"key": "isSecretBase64Encoded",
									"value": false,
									"type": "boolean"
								},
								{
									"key": "payload",
									"value": "{}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "headerPrefix",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "queryParamKey",
									"value": "token",
									"type": "string"
								},
								{
									"key": "header",
									"value": "{}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"me@mbe.com\",\n    \"password\": \"a\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mainurl}}/login",
							"host": [
								"{{mainurl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "60019abc-c58f-4b65-a348-2eace3622ef1",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "3db06922-c4e8-49c9-867e-c4436fe8f431",
								"exec": [
									"pm.test(\"Status Code is 200\", function(){",
									"    pm.response.to.have.status(200)",
									"    console.log(\"Pass login in test\")",
									"})",
									"let token = pm.cookies.get(\"tradelink\");",
									"pm.environment.set(\"token_user\", token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "c5991279-e054-45a9-b954-d9560af1c395",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "jwt",
							"jwt": [
								{
									"key": "algorithm",
									"value": "HS256",
									"type": "string"
								},
								{
									"key": "isSecretBase64Encoded",
									"value": false,
									"type": "boolean"
								},
								{
									"key": "payload",
									"value": "{}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "headerPrefix",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "queryParamKey",
									"value": "token",
									"type": "string"
								},
								{
									"key": "header",
									"value": "{}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"me@mae.com\",\n    \"password\": \"a\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mainurl}}/login",
							"host": [
								"{{mainurl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login User2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2e0558a8-45df-43c6-bf7e-6c93fb090fc1",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "7319ed16-98e5-4fb2-ba5f-dca921096258",
								"exec": [
									"pm.test(\"Status Code is 200\", function(){",
									"    pm.response.to.have.status(200)",
									"    console.log(\"Pass login in test\")",
									"})",
									"let token = pm.cookies.get(\"tradelink\");",
									"pm.environment.set(\"token_user2\", token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "4b9058bb-9e73-42b2-a0f0-83da84e16456",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "jwt",
							"jwt": [
								{
									"key": "algorithm",
									"value": "HS256",
									"type": "string"
								},
								{
									"key": "isSecretBase64Encoded",
									"value": false,
									"type": "boolean"
								},
								{
									"key": "payload",
									"value": "{}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "headerPrefix",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "queryParamKey",
									"value": "token",
									"type": "string"
								},
								{
									"key": "header",
									"value": "{}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"f@me.com\",\n    \"password\": \"a\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mainurl}}/login",
							"host": [
								"{{mainurl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetItems",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ce82a4f7-3443-4485-829c-5200d8b97266",
								"exec": [
									"let itemInfo = pm.response.json();",
									"pm.environment.set(\"item_info\", JSON.stringify(itemInfo[0]))"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "f68246a6-479e-4ac1-a39e-078f05f0c41b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{mainurl}}/send_listings_guest",
							"host": [
								"{{mainurl}}"
							],
							"path": [
								"send_listings_guest"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetUserID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a031e346-b93a-4f9e-9662-0549d4abc052",
								"exec": [
									"let itemInfo = pm.response.json();",
									"pm.environment.set(\"user_id\", JSON.stringify(itemInfo.uid))"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "c0ed217f-bf2b-49de-a9f5-08cc016cb8f1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "jwt",
							"jwt": [
								{
									"key": "payload",
									"value": "{{token_user}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "algorithm",
									"value": "HS256",
									"type": "string"
								},
								{
									"key": "isSecretBase64Encoded",
									"value": false,
									"type": "boolean"
								},
								{
									"key": "headerPrefix",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "queryParamKey",
									"value": "token",
									"type": "string"
								},
								{
									"key": "header",
									"value": "{}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://128.6.60.7:8080/profile",
							"protocol": "http",
							"host": [
								"128",
								"6",
								"60",
								"7"
							],
							"port": "8080",
							"path": [
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "listrandomitem",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4f1c85a2-158a-4117-b609-f3dcf0695448",
								"exec": [
									"let bufferItem = pm.response.json()",
									"pm.environment.set(\"buffer_id\", JSON.stringify(bufferItem.item_id))",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "9a15a73e-c20a-46ea-bafe-cc62758a039e",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "f7094a9a-f316-4614-9369-7b8ec91d54aa",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "jwt",
							"jwt": [
								{
									"key": "payload",
									"value": "{{token_user}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "algorithm",
									"value": "HS256",
									"type": "string"
								},
								{
									"key": "isSecretBase64Encoded",
									"value": false,
									"type": "boolean"
								},
								{
									"key": "headerPrefix",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "queryParamKey",
									"value": "token",
									"type": "string"
								},
								{
									"key": "header",
									"value": "{}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"itemname\": \"toremove\",\n    \"description\": \"removeme\",\n    \"category\": 2,\n    \"price\": \"5.00\",\n    \"country_code\": \"US\",\n    \"township\": \"news\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mainurl}}/uploadItem",
							"host": [
								"{{mainurl}}"
							],
							"path": [
								"uploadItem"
							]
						}
					},
					"response": []
				},
				{
					"name": "listrandomitem Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "be753b8c-d115-4b4a-9c20-8d49396c1084",
								"exec": [
									"let bufferItem = pm.response.json()",
									"pm.environment.set(\"buffer_id2\", JSON.stringify(bufferItem.item_id))",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "c2115b7e-c267-45f3-8eb6-df01cc110a04",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "48ad7f91-c137-49a5-85ae-3e2e11aef92e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "jwt",
							"jwt": [
								{
									"key": "payload",
									"value": "{{token_user}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "algorithm",
									"value": "HS256",
									"type": "string"
								},
								{
									"key": "isSecretBase64Encoded",
									"value": false,
									"type": "boolean"
								},
								{
									"key": "headerPrefix",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "queryParamKey",
									"value": "token",
									"type": "string"
								},
								{
									"key": "header",
									"value": "{}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"itemname\": \"toremove\",\n    \"description\": \"removeme\",\n    \"category\": 1,\n    \"price\": \"5.00\",\n    \"country_code\": \"US\",\n    \"township\": \"news\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mainurl}}/uploadItem",
							"host": [
								"{{mainurl}}"
							],
							"path": [
								"uploadItem"
							]
						}
					},
					"response": []
				},
				{
					"name": "sellerID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bf082d13-96ef-46fb-b306-e5acd7a5d5b6",
								"exec": [
									"res = pm.response.json()",
									"",
									"pm.environment.set(\"seller_id\", res.uid)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "8324eac8-570e-4dd9-8451-1bab39e25c86",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "jwt",
							"jwt": [
								{
									"key": "payload",
									"value": "{{token_user}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "algorithm",
									"value": "HS256",
									"type": "string"
								},
								{
									"key": "isSecretBase64Encoded",
									"value": false,
									"type": "boolean"
								},
								{
									"key": "headerPrefix",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "queryParamKey",
									"value": "token",
									"type": "string"
								},
								{
									"key": "header",
									"value": "{}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{mainurl}}/profile",
							"host": [
								"{{mainurl}}"
							],
							"path": [
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "buyerID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "07ebc8ff-56f3-4ee8-a7af-799cd0f5c761",
								"exec": [
									"res = pm.response.json()",
									"",
									"pm.environment.set(\"buyer_id\", res.uid)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "074404a3-e374-490e-85dd-3884f5ab8a32",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "jwt",
							"jwt": [
								{
									"key": "payload",
									"value": "{{token_user2}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "algorithm",
									"value": "HS256",
									"type": "string"
								},
								{
									"key": "isSecretBase64Encoded",
									"value": false,
									"type": "boolean"
								},
								{
									"key": "headerPrefix",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "queryParamKey",
									"value": "token",
									"type": "string"
								},
								{
									"key": "header",
									"value": "{}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{mainurl}}/profile",
							"host": [
								"{{mainurl}}"
							],
							"path": [
								"profile"
							]
						}
					},
					"response": []
				}
			],
			"id": "85d05056-555e-4195-a769-c6a3793ccbc1"
		},
		{
			"name": "TODO",
			"item": [
				{
					"name": "update UserProfile-UI014",
					"id": "3afe0a07-b159-4a63-ad7c-3cd20d0c8aeb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "updateUserProfile-UI014",
							"host": [
								"updateUserProfile-UI014"
							]
						}
					},
					"response": []
				},
				{
					"name": "UI005",
					"id": "3ceced93-bf5a-47aa-a4dd-e1dd10617fbd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				},
				{
					"name": "UI010",
					"id": "297d37ce-e352-4eb0-9e8f-dbf2ef3f9da5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				},
				{
					"name": "TP012",
					"id": "3cf8c78d-b376-4db8-bd32-8dabed03aad1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				},
				{
					"name": "TP015",
					"id": "238d7f8e-567b-469c-9ffa-660ea627f128",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				},
				{
					"name": "TP016",
					"id": "b003716f-c265-42f4-9c9f-6ff08f25658e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				},
				{
					"name": "TP017",
					"id": "e3bb4772-ef95-4f60-9e13-4108e662a8c4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				}
			],
			"id": "a0eeb89f-2bb9-4810-a667-14dab43c0a89"
		}
	],
	"auth": {
		"type": "jwt",
		"jwt": [
			{
				"key": "algorithm",
				"value": "HS256",
				"type": "string"
			},
			{
				"key": "isSecretBase64Encoded",
				"value": false,
				"type": "boolean"
			},
			{
				"key": "payload",
				"value": "{}",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			},
			{
				"key": "headerPrefix",
				"value": "Bearer",
				"type": "string"
			},
			{
				"key": "queryParamKey",
				"value": "token",
				"type": "string"
			},
			{
				"key": "header",
				"value": "{}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "3db13ce5-0604-4770-9d1f-811b1a726cd1",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "846d04bd-e7b9-494c-bcb4-9a5536737570",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}